@model MovieStore.ViewModels.NewCustomerViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Customer</h2>

@*Nome da action e o nome de controller*@
@using (Html.BeginForm("Create", "Customers"))
{
    /*
     Ao utilizar o LabelFor e TextBoxFor utilzando o modelo, ele ja pega as validaçoes como por exemplo o Required do Name
     */
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @*
            Ao utilizar o new { @class = "css class"} você consegue definir o tipo de classe do CSS que voce deseja
        *@
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Birth)
        @Html.TextBoxFor(m => m.Customer.Birth, new { @class = "form-control" })
    </div>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsletter) Subscribed to Newsletter?
        </label>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipType)
        @*
        Argumentos 1, 2 e 3 do método SelectList()
        No SelectList(Lista de objetos, valor da dropdown, valor mostrado ao usuário)

        Depois Testar a diferença entre:
            - m => m.Customer.MembershipType
            - m => m.Customer.MembershipTypeId

        *@
        @Html.DropDownListFor(m => m.Customer.MembershipType, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select MemberShipType", new { @class = "form-control" })
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    
}